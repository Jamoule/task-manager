version: '3.8'

services:
  # === Service PHP-FPM pour Symfony ===
  php:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: symfony_php
    restart: always
    working_dir: /app
    volumes:
      - ./:/app:delegated
    environment:
      # Symfony lit DATABASE_URL depuis .env, on l'exporte ici pour Docker
      DATABASE_URL: "postgresql://${POSTGRES_USER:-app}:${POSTGRES_PASSWORD:-!ChangeMe!}@database:5432/${POSTGRES_DB:-app}"
      APP_ENV: dev
      # Vous pouvez ajouter d'autres variables d'env. si besoin
    depends_on:
      database:
        condition: service_healthy

  # === Service Nginx pour servir votre application ===
  nginx:
    image: nginx:1.25-alpine
    container_name: symfony_nginx
    restart: always
    ports:
      - "80:80"
    volumes:
      - ./:/app:ro,delegated
      - ./docker/nginx/conf.d:/etc/nginx/conf.d:ro
    depends_on:
      - php

  # === Base de donn√©es PostgreSQL ===
  database:
    image: postgres:${POSTGRES_VERSION:-16}-alpine
    container_name: symfony_db
    environment:
      POSTGRES_DB: ${POSTGRES_DB:-app}
      POSTGRES_USER: ${POSTGRES_USER:-app}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD:-!ChangeMe!}
    healthcheck:
      test: ["CMD", "pg_isready", "-d", "${POSTGRES_DB:-app}", "-U", "${POSTGRES_USER:-app}"]
      timeout: 5s
      retries: 5
      start_period: 60s
    ports:
      - "5432:5432"
    volumes:
      - database_data:/var/lib/postgresql/data:rw

  # === Interface d'administration de la base ===
  adminer:
    image: adminer
    container_name: symfony_adminer
    restart: always
    ports:
      - "8080:8080"
    depends_on:
      - database

volumes:
  database_data:
