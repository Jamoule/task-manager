name: CI Task Manager

on:
  push:
    branches:
      - main
  pull_request:

jobs:
  test:
    name: 🧪 Run Tests & Generate Coverage
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v3

      - name: 🧰 Setup PHP et extensions (incl. pcov)
        uses: shivammathur/setup-php@v2
        with:
          php-version: '8.2'
          extensions: mbstring, xml, ctype, iconv, intl, pdo_sqlite, pcov
          coverage: pcov

      - name: 📦 Installation des dépendances Composer
        run: composer install --no-progress --prefer-dist --optimize-autoloader

      - name: 🧪 Lancer les tests Symfony avec couverture
        run: |
          php -d pcov.enabled=1 bin/phpunit --coverage-clover=coverage.xml

      - name: ⚙️ Configure Git User
        run: |
          git config user.name "GitHub Actions Bot"
          git config user.email "<>"

      - name: ✨ Générer et commiter le badge de couverture
        uses: timkrase/phpunit-coverage-badge@v1.2.1
        with:
          path: coverage.xml
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          commit_message: "chore: Update coverage badge [skip ci]"

      - name: 📤 Upload rapport de couverture (Artifact)
        uses: actions/upload-artifact@v4
        with:
          name: coverage-report
          path: coverage.xml

  build_docker:
    name: 🐳 Build Docker Image
    needs: test
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v3

      - name: 🔧 Setup Docker Buildx
        uses: docker/setup-buildx-action@v2

      - name: 🐳 Build Docker image de l'app (prod)
        run: |
          docker build -t task-manager .

  monitoring:
    name: 📊 Deploy Monitoring Stack
    needs: build_docker
    runs-on: ubuntu-latest

    steps:
      - name: 📥 Récupération du code
        uses: actions/checkout@v3

      - name: 📈 Lancer Prometheus
        run: |
          docker run -d \
            --name prometheus \
            -p 9090:9090 \
            -v ${{ github.workspace }}/monitoring/prometheus.yml:/etc/prometheus/prometheus.yml \
            prom/prometheus

      - name: 📈 Lancer Grafana
        run: |
          docker run -d \
            --name grafana \
            -p 3000:3000 \
            grafana/grafana

      - name: ✅ Vérification conteneurs
        run: docker ps -a
