name: CI Task Manager

on:
  push:
    branches: [main]
  pull_request:

jobs:
  integration-tests:
    name: 🧪 Integration Tests
    runs-on: ubuntu-latest
    env:
      APP_ENV: test
      # Définition explicite de DATABASE_URL pour GitHub Actions
      DATABASE_URL: "postgresql://testuser:testpassword@localhost:5433/task_manager_test?serverVersion=15&charset=utf8"
    steps:
      - name: 📥 Checkout du code
        uses: actions/checkout@v3

      - name: 🐳 Démarrage des services de test Docker Compose
        run: docker compose -f docker-compose.test.yml up -d --wait --wait-timeout 120
        # --wait attend que tous les healthchecks soient healthy :contentReference[oaicite:7]{index=7}

      - name: 📦 Installation des dépendances Composer
        run: composer install --no-interaction --prefer-dist --optimize-autoloader
        # À faire après avoir démarré les services, pour installer les bundles de test :contentReference[oaicite:8]{index=8}

      - name: 🧱 Création et migration de la BDD de test
        run: |
          php bin/console doctrine:database:drop --env=test --force --if-exists
          php bin/console doctrine:database:create --env=test --if-not-exists
          php bin/console doctrine:schema:create --env=test
        env:
          APP_ENV: test
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5433/task_manager_test?serverVersion=15&charset=utf8"
        # Prépare la base en mode test avant PHPUnit :contentReference[oaicite:9]{index=9}

      - name: 🧪 Lancer les tests d'intégration
        run: php -d pcov.enabled=1 bin/phpunit --coverage-clover=clover.xml
        env:
          APP_ENV: test
          DATABASE_URL: "postgresql://testuser:testpassword@localhost:5433/task_manager_test?serverVersion=15&charset=utf8"
        # Exécute tous les tests disponibles, car la suite integration est maintenant correctement définie :contentReference[oaicite:10]{index=10}

      - name: 🧹 Arrêt et nettoyage des services
        if: always()
        run: docker compose -f docker-compose.test.yml down -v --remove-orphans
        # Libère les volumes et conteneurs pour ne pas polluer le runner :contentReference[oaicite:11]{index=11}
